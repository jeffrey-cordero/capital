services:
  client:
    image: node:alpine
    working_dir: /app
    volumes:
      - ./client:/app
      - ./client/.env:/app/.env
      - ./types:/types
    networks:
      - capital_network
    ports:
      - "3000:3000"
    depends_on:
      - server
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: sh -c ""
    container_name: capital_client

  server:
    image: node:alpine
    working_dir: /app
    volumes:
      - ./server:/app
      - ./server/.env:/app/.env
      - ./types:/types
    networks:
      - capital_network
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: sh -c "npm uninstall bcrypt && npm install bcrypt && npm run dev"
    container_name: capital_server

  postgres: 
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: capital
    volumes:
      - capital_postgres_data:/var/lib/capital/data
      - ./server/lib/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - capital_network
    ports:
      - "5432:5432"
    healthcheck:
       test: ['CMD', 'pg_isready', '-U', 'postgres', '-d', 'capital']
       interval: 60s
       timeout: 5s
       retries: 5
    restart: "on-failure"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    container_name: capital_postgres

  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - capital_network
    volumes:
      - capital_redis_data:/capital/redis_data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: always
    container_name: capital_redis

networks:
  capital_network:
    driver: bridge

volumes:
  capital_postgres_data:
  capital_redis_data: